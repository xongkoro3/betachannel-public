"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _path = require("path");

var _tsUtils = require("./tsUtils");

const mocksDirName = '__mocks__';

const isMockPath = path => path.split(_path.posix.sep).includes(mocksDirName);

const isMockImportLiteral = expression => expression !== undefined && (0, _tsUtils.isLiteralNode)(expression) && typeof expression.value === 'string' && isMockPath(expression.value);

var _default = (0, _tsUtils.createRule)({
  name: __filename,
  meta: {
    type: 'problem',
    docs: {
      description: 'When using `jest.mock`, your tests (just like the code being tested) should import from `./x`, not `./__mocks__/x`. Not following this rule can lead to confusion, because you will have multiple instances of the mocked module',
      category: 'Best Practices',
      recommended: 'error'
    },
    messages: {
      noManualImport: `Mocks should not be manually imported from a ${mocksDirName} directory. Instead use jest.mock and import from the original module path.`
    },
    schema: []
  },
  defaultOptions: [],

  create(context) {
    return {
      ImportDeclaration(node) {
        if (isMockImportLiteral(node.source)) {
          context.report({
            node,
            messageId: 'noManualImport'
          });
        }
      },

      'CallExpression[callee.name="require"]'(node) {
        if (isMockImportLiteral(node.arguments[0])) {
          context.report({
            node: node.arguments[0],
            messageId: 'noManualImport'
          });
        }
      }

    };
  }

});

exports.default = _default;