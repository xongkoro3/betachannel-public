"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _tsUtils = require("./tsUtils");

var _default = (0, _tsUtils.createRule)({
  name: __filename,
  meta: {
    docs: {
      category: 'Best Practices',
      description: 'Suggest using toStrictEqual()',
      recommended: false
    },
    messages: {
      useToStrictEqual: 'Use toStrictEqual() instead'
    },
    fixable: 'code',
    schema: [],
    type: 'suggestion'
  },
  defaultOptions: [],

  create(context) {
    return {
      CallExpression(node) {
        if (!(0, _tsUtils.isExpectCallWithParent)(node)) {
          return;
        }

        const methodNode = node.parent.property;

        if (methodNode && methodNode.name === 'toEqual') {
          context.report({
            fix(fixer) {
              return [fixer.replaceText(methodNode, 'toStrictEqual')];
            },

            messageId: 'useToStrictEqual',
            node: methodNode
          });
        }
      }

    };
  }

});

exports.default = _default;